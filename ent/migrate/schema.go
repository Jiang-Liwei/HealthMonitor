// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminJwtBlacklistsColumns holds the columns for the "admin_jwt_blacklists" table.
	AdminJwtBlacklistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "jti", Type: field.TypeString, Unique: true},
		{Name: "expires_at", Type: field.TypeInt},
		{Name: "revoked_at", Type: field.TypeInt, Default: 1725110824},
	}
	// AdminJwtBlacklistsTable holds the schema information for the "admin_jwt_blacklists" table.
	AdminJwtBlacklistsTable = &schema.Table{
		Name:       "admin_jwt_blacklists",
		Columns:    AdminJwtBlacklistsColumns,
		PrimaryKey: []*schema.Column{AdminJwtBlacklistsColumns[0]},
	}
	// AdminLogsColumns holds the columns for the "admin_logs" table.
	AdminLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "action", Type: field.TypeString},
		{Name: "ip_address", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "admin_user_logs", Type: field.TypeUUID, Nullable: true},
	}
	// AdminLogsTable holds the schema information for the "admin_logs" table.
	AdminLogsTable = &schema.Table{
		Name:       "admin_logs",
		Columns:    AdminLogsColumns,
		PrimaryKey: []*schema.Column{AdminLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_logs_admin_users_logs",
				Columns:    []*schema.Column{AdminLogsColumns[4]},
				RefColumns: []*schema.Column{AdminUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminMenusColumns holds the columns for the "admin_menus" table.
	AdminMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "path", Type: field.TypeString},
		{Name: "order", Type: field.TypeUint16, Default: 0},
		{Name: "created_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "updated_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "deleted_at", Type: field.TypeInt, Nullable: true},
	}
	// AdminMenusTable holds the schema information for the "admin_menus" table.
	AdminMenusTable = &schema.Table{
		Name:       "admin_menus",
		Columns:    AdminMenusColumns,
		PrimaryKey: []*schema.Column{AdminMenusColumns[0]},
	}
	// AdminPermissionsColumns holds the columns for the "admin_permissions" table.
	AdminPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "path", Type: field.TypeString},
		{Name: "method", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "updated_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "deleted_at", Type: field.TypeInt, Nullable: true},
	}
	// AdminPermissionsTable holds the schema information for the "admin_permissions" table.
	AdminPermissionsTable = &schema.Table{
		Name:       "admin_permissions",
		Columns:    AdminPermissionsColumns,
		PrimaryKey: []*schema.Column{AdminPermissionsColumns[0]},
	}
	// AdminRolePermissionsColumns holds the columns for the "admin_role_permissions" table.
	AdminRolePermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "admin_permission_roles", Type: field.TypeUUID, Nullable: true},
		{Name: "admin_roles_permissions", Type: field.TypeUUID, Nullable: true},
	}
	// AdminRolePermissionsTable holds the schema information for the "admin_role_permissions" table.
	AdminRolePermissionsTable = &schema.Table{
		Name:       "admin_role_permissions",
		Columns:    AdminRolePermissionsColumns,
		PrimaryKey: []*schema.Column{AdminRolePermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_role_permissions_admin_permissions_roles",
				Columns:    []*schema.Column{AdminRolePermissionsColumns[1]},
				RefColumns: []*schema.Column{AdminPermissionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "admin_role_permissions_admin_roles_permissions",
				Columns:    []*schema.Column{AdminRolePermissionsColumns[2]},
				RefColumns: []*schema.Column{AdminRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminRolesColumns holds the columns for the "admin_roles" table.
	AdminRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "updated_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "deleted_at", Type: field.TypeInt, Nullable: true},
	}
	// AdminRolesTable holds the schema information for the "admin_roles" table.
	AdminRolesTable = &schema.Table{
		Name:       "admin_roles",
		Columns:    AdminRolesColumns,
		PrimaryKey: []*schema.Column{AdminRolesColumns[0]},
	}
	// AdminUsersColumns holds the columns for the "admin_users" table.
	AdminUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "last_login_at", Type: field.TypeInt, Nullable: true},
		{Name: "jwt_issued_at", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "updated_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "deleted_at", Type: field.TypeInt, Nullable: true},
	}
	// AdminUsersTable holds the schema information for the "admin_users" table.
	AdminUsersTable = &schema.Table{
		Name:       "admin_users",
		Columns:    AdminUsersColumns,
		PrimaryKey: []*schema.Column{AdminUsersColumns[0]},
	}
	// AdminUserRolesColumns holds the columns for the "admin_user_roles" table.
	AdminUserRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "admin_roles_users", Type: field.TypeUUID, Nullable: true},
		{Name: "admin_user_roles", Type: field.TypeUUID, Nullable: true},
	}
	// AdminUserRolesTable holds the schema information for the "admin_user_roles" table.
	AdminUserRolesTable = &schema.Table{
		Name:       "admin_user_roles",
		Columns:    AdminUserRolesColumns,
		PrimaryKey: []*schema.Column{AdminUserRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_user_roles_admin_roles_users",
				Columns:    []*schema.Column{AdminUserRolesColumns[1]},
				RefColumns: []*schema.Column{AdminRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "admin_user_roles_admin_users_roles",
				Columns:    []*schema.Column{AdminUserRolesColumns[2]},
				RefColumns: []*schema.Column{AdminUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BloodStatusRecordsColumns holds the columns for the "blood_status_records" table.
	BloodStatusRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "记录的唯一标识符"},
		{Name: "user_id", Type: field.TypeUUID, Comment: "用户id"},
		{Name: "record_date", Type: field.TypeUint, Comment: "记录日期"},
		{Name: "time_of_day", Type: field.TypeEnum, Comment: "记录时间段，早晨、中午、晚上", Enums: []string{"morning", "noon", "evening"}},
		{Name: "before_after_meals", Type: field.TypeEnum, Comment: "餐前餐后，前、后", Enums: []string{"before", "after"}},
		{Name: "systolic_pressure", Type: field.TypeUint8, Comment: "收缩压"},
		{Name: "diastolic_pressure", Type: field.TypeUint8, Comment: "舒张压"},
		{Name: "pulse", Type: field.TypeUint8, Comment: "脉搏"},
		{Name: "created_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "updated_at", Type: field.TypeInt, Default: 1725110824},
		{Name: "deleted_at", Type: field.TypeInt, Nullable: true},
	}
	// BloodStatusRecordsTable holds the schema information for the "blood_status_records" table.
	BloodStatusRecordsTable = &schema.Table{
		Name:       "blood_status_records",
		Columns:    BloodStatusRecordsColumns,
		PrimaryKey: []*schema.Column{BloodStatusRecordsColumns[0]},
	}
	// FoodsColumns holds the columns for the "foods" table.
	FoodsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "食物ID"},
		{Name: "name", Type: field.TypeString, Comment: "食物名称"},
		{Name: "effect", Type: field.TypeEnum, Comment: "对血压等的影响，益处、中性、害处", Enums: []string{"beneficial", "neutral", "harmful"}},
	}
	// FoodsTable holds the schema information for the "foods" table.
	FoodsTable = &schema.Table{
		Name:       "foods",
		Columns:    FoodsColumns,
		PrimaryKey: []*schema.Column{FoodsColumns[0]},
	}
	// FoodIngredientsColumns holds the columns for the "food_ingredients" table.
	FoodIngredientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "food_ingredients", Type: field.TypeUUID, Nullable: true},
		{Name: "ingredients_food", Type: field.TypeUUID, Nullable: true},
	}
	// FoodIngredientsTable holds the schema information for the "food_ingredients" table.
	FoodIngredientsTable = &schema.Table{
		Name:       "food_ingredients",
		Columns:    FoodIngredientsColumns,
		PrimaryKey: []*schema.Column{FoodIngredientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "food_ingredients_foods_ingredients",
				Columns:    []*schema.Column{FoodIngredientsColumns[1]},
				RefColumns: []*schema.Column{FoodsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "food_ingredients_ingredients_food",
				Columns:    []*schema.Column{FoodIngredientsColumns[2]},
				RefColumns: []*schema.Column{IngredientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FoodNutrientsRelationshipsColumns holds the columns for the "food_nutrients_relationships" table.
	FoodNutrientsRelationshipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "food_nutrient", Type: field.TypeUUID, Nullable: true},
		{Name: "nutrient_food", Type: field.TypeUUID, Nullable: true},
	}
	// FoodNutrientsRelationshipsTable holds the schema information for the "food_nutrients_relationships" table.
	FoodNutrientsRelationshipsTable = &schema.Table{
		Name:       "food_nutrients_relationships",
		Columns:    FoodNutrientsRelationshipsColumns,
		PrimaryKey: []*schema.Column{FoodNutrientsRelationshipsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "food_nutrients_relationships_foods_nutrient",
				Columns:    []*schema.Column{FoodNutrientsRelationshipsColumns[1]},
				RefColumns: []*schema.Column{FoodsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "food_nutrients_relationships_nutrients_food",
				Columns:    []*schema.Column{FoodNutrientsRelationshipsColumns[2]},
				RefColumns: []*schema.Column{NutrientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// IngredientsColumns holds the columns for the "ingredients" table.
	IngredientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "食材ID"},
		{Name: "name", Type: field.TypeString, Comment: "食材名称"},
		{Name: "effect", Type: field.TypeEnum, Comment: "对血压等的影响，益处、中性、害处", Enums: []string{"beneficial", "neutral", "harmful"}},
	}
	// IngredientsTable holds the schema information for the "ingredients" table.
	IngredientsTable = &schema.Table{
		Name:       "ingredients",
		Columns:    IngredientsColumns,
		PrimaryKey: []*schema.Column{IngredientsColumns[0]},
	}
	// NutrientsColumns holds the columns for the "nutrients" table.
	NutrientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "营养ID"},
		{Name: "name", Type: field.TypeString, Comment: "营养名称"},
		{Name: "effect", Type: field.TypeEnum, Comment: "对血压等的影响，益处、中性、害处", Enums: []string{"beneficial", "neutral", "harmful"}},
	}
	// NutrientsTable holds the schema information for the "nutrients" table.
	NutrientsTable = &schema.Table{
		Name:       "nutrients",
		Columns:    NutrientsColumns,
		PrimaryKey: []*schema.Column{NutrientsColumns[0]},
	}
	// UserMealsColumns holds the columns for the "user_meals" table.
	UserMealsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeUUID, Comment: "用户id"},
		{Name: "record_date", Type: field.TypeInt, Comment: "记录日期"},
		{Name: "meal_type", Type: field.TypeEnum, Comment: "餐点类型，早餐、午餐、晚餐", Enums: []string{"breakfast", "lunch", "dinner"}},
		{Name: "description", Type: field.TypeString, Comment: "餐点描述"},
	}
	// UserMealsTable holds the schema information for the "user_meals" table.
	UserMealsTable = &schema.Table{
		Name:       "user_meals",
		Columns:    UserMealsColumns,
		PrimaryKey: []*schema.Column{UserMealsColumns[0]},
	}
	// UserMealFoodsColumns holds the columns for the "user_meal_foods" table.
	UserMealFoodsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "food_user_meal", Type: field.TypeUUID, Nullable: true},
		{Name: "user_meal_food", Type: field.TypeInt, Nullable: true},
	}
	// UserMealFoodsTable holds the schema information for the "user_meal_foods" table.
	UserMealFoodsTable = &schema.Table{
		Name:       "user_meal_foods",
		Columns:    UserMealFoodsColumns,
		PrimaryKey: []*schema.Column{UserMealFoodsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_meal_foods_foods_user_meal",
				Columns:    []*schema.Column{UserMealFoodsColumns[1]},
				RefColumns: []*schema.Column{FoodsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_meal_foods_user_meals_food",
				Columns:    []*schema.Column{UserMealFoodsColumns[2]},
				RefColumns: []*schema.Column{UserMealsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminJwtBlacklistsTable,
		AdminLogsTable,
		AdminMenusTable,
		AdminPermissionsTable,
		AdminRolePermissionsTable,
		AdminRolesTable,
		AdminUsersTable,
		AdminUserRolesTable,
		BloodStatusRecordsTable,
		FoodsTable,
		FoodIngredientsTable,
		FoodNutrientsRelationshipsTable,
		IngredientsTable,
		NutrientsTable,
		UserMealsTable,
		UserMealFoodsTable,
	}
)

func init() {
	AdminLogsTable.ForeignKeys[0].RefTable = AdminUsersTable
	AdminRolePermissionsTable.ForeignKeys[0].RefTable = AdminPermissionsTable
	AdminRolePermissionsTable.ForeignKeys[1].RefTable = AdminRolesTable
	AdminUserRolesTable.ForeignKeys[0].RefTable = AdminRolesTable
	AdminUserRolesTable.ForeignKeys[1].RefTable = AdminUsersTable
	BloodStatusRecordsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='血压状态记录表'",
	}
	FoodsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='食物表'",
	}
	FoodIngredientsTable.ForeignKeys[0].RefTable = FoodsTable
	FoodIngredientsTable.ForeignKeys[1].RefTable = IngredientsTable
	FoodIngredientsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='食物与食材的关联表'",
	}
	FoodNutrientsRelationshipsTable.ForeignKeys[0].RefTable = FoodsTable
	FoodNutrientsRelationshipsTable.ForeignKeys[1].RefTable = NutrientsTable
	FoodNutrientsRelationshipsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='食物与营养的关联表'",
	}
	IngredientsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='食材表'",
	}
	NutrientsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='营养表'",
	}
	UserMealsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='餐食记录表'",
	}
	UserMealFoodsTable.ForeignKeys[0].RefTable = FoodsTable
	UserMealFoodsTable.ForeignKeys[1].RefTable = UserMealsTable
	UserMealFoodsTable.Annotation = &entsql.Annotation{
		Options: "COMMENT='餐食与食物的关联表'",
	}
}
